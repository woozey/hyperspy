
shallow_clone: true

environment:

  global:
    TEST_DEPS: "pytest pytest-cov pytest-mpl wheel"
    DEPS: "numpy scipy matplotlib ipython h5py sympy scikit-learn dill setuptools natsort scikit-image cython ipyparallel dask numexpr sparse numba tqdm pint requests imageio traits"
    MPLBACKEND: "agg"

  matrix:
     - PY_VERSION: 3.7
       PLATFORM: x64
     - PY_VERSION: 3.7
       PLATFORM: x86
     - PY_VERSION: 3.6
       PLATFORM: x64
     - PY_VERSION: 3.6
       PLATFORM: x86
       TAG_SCENARIO: true

for:
-
  # tagged scenario
  matrix:
    only:
      - TAG_SCENARIO: true

  skip_non_tags: true


init:
  - "ECHO %PYTHON%"
  - "ECHO %APPVEYOR_BUILD_FOLDER%"
  - "ECHO %CMD_IN_ENV%"

install:
  - ps: Add-AppveyorMessage "Starting install..."

  # Activate miniconda root environment
  - if "%PLATFORM%"=="x86" set MINICONDA="C:\\Miniconda37"
  - if "%PLATFORM%"=="x64" set MINICONDA="C:\\Miniconda37-x64"
  - "%MINICONDA%\\Scripts\\activate.bat"

  # Setup miniconda environment.
  - ps: Add-AppveyorMessage "Setup miniconda environment..."
  # Disable update conda until the following issue is solved
  # https://github.com/conda/conda/issues/7144
  # https://github.com/appveyor/ci/issues/2270
  # - "conda update -y conda"
  - "conda config --append channels conda-forge"
  - "conda create -y -n testenv python=%PY_VERSION%"
  - "activate testenv"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import sys; print(sys.version)\""  # this gives more info
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Install the dependencies of hyperspy.
  - ps: Add-AppveyorMessage "Installing conda packages..."
  - if "%PLATFORM%"=="x64" set DEPS=%DEPS% mrcz
  - "conda install -y %DEPS% %TEST_DEPS%"

  - ps: Add-AppveyorMessage "Installing hyperspy..."
  - "pip install .[tests]"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Run the project tests
  - ps: Add-AppveyorMessage "Running tests..."
  - "pytest --mpl"
  - "python setup.py clean"
  - ps: Add-AppveyorMessage "Testing completed."

after_test:
  - python setup.py bdist_wheel

artifacts:
  - path: dist\*.whl
    name: win_wheels

on_failure:
  - ps: $Env:image_comparison_filename = 'image_comparison_' + $Env:PYTHON_VERSION + '_' + $Env:PYTHON_ARCH + 'bits.zip'
  - ps: 7z a -r $Env:image_comparison_filename C:\Users\appveyor\AppData\Local\Temp\1\*png
  - ps: Push-AppveyorArtifact $Env:image_comparison_filename

deploy:
  provider: GitHub
  auth_token:
    #   to266:
    #secure: ptV5Dkz3pSVdjD0qRDpxJgjVlddFtleZ+B+c2X1Fg67P8OX3bHWVktRmlj6hfLhM
    #   vidartf:
    #secure: KwAfARhGEqOnZHltPB6kKu8xmnoiGSk7NMYJBIEbWvFCuVnepoPV7ZcIjUN3pUpK
    #   sem-geologist:
    #secure: RRqUkx9H5VuFNITmm+YzgB0qnqgVGPH1yrPVxb4oCD+FAjcTch2WZAiPEKn4L6w6
    #   ericpre:
    #secure: ae8XsPI+vKJI9AWm0r9+ec71CIkXcnCHlNIQ57v+87hh5k1xuAAxIOi1CFKEmmZv
    # francisco-dlp
    secure: ziv2aenVNPt0QKxSpAmkGIHRkv51FNhiiLo9epCeeURGaTjvQOlJBiAy3mzB5lRf
  artifact: win_wheels  # upload wheels to release assets
  draft: false
  prerelease: false
  force_update: true
  on:
    appveyor_repo_tag: true        # deploy on tag push only

